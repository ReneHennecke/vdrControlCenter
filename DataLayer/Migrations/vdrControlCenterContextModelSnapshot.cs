// <auto-generated />
using System;
using DataLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(vdrControlCenterContext))]
    partial class vdrControlCenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataLayer.Models.Channel", b =>
                {
                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<string>("Apid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APID");

                    b.Property<string>("Caid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CAID");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ChannelID");

                    b.Property<string>("ChannelName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Favourite")
                        .HasColumnType("bit");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Nid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NID");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Params")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RID");

                    b.Property<string>("Sid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SID");

                    b.Property<string>("SignalSource")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("SymbolRate")
                        .HasColumnType("int");

                    b.Property<string>("Tid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TID");

                    b.Property<string>("Tpid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TPID");

                    b.Property<string>("Vpid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VPID");

                    b.HasKey("RecId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("DataLayer.Models.Epg", b =>
                {
                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<long?>("ChannelRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("Duration");

                    b.Property<int?>("DurationComputed")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("([Duration] / (60))");

                    b.Property<DateTime?>("EndTimeComputed")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasComputedColumnSql("(dateadd(second, isnull([Duration], (0)), [StartTime])");

                    b.Property<int?>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<bool?>("Favourite")
                        .HasColumnType("bit")
                        .HasColumnName("Favourite");

                    b.Property<string>("GenreCodes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Modtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("ParentalRating")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Stream")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("TableId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TableID");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Version")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("Vps")
                        .HasColumnType("datetime")
                        .HasColumnName("VPS");

                    b.HasKey("RecId");

                    b.HasIndex("ChannelRecId", "EventId")
                        .HasDatabaseName("NCI_EventID");

                    b.HasIndex("ChannelRecId", "StartTime")
                        .HasDatabaseName("NCI_ChannelRecId_StartTime");

                    b.ToTable("EPG", (string)null);
                });

            modelBuilder.Entity("DataLayer.Models.FakeEpg", b =>
                {
                    b.Property<string>("ChannelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ChannelRecId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChannelsRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<bool?>("Favourite")
                        .HasColumnType("bit");

                    b.Property<string>("GenreCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modtime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentalRating")
                        .HasColumnType("int");

                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<long>("RecordingsRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stream")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SymbolIndex")
                        .HasColumnType("int");

                    b.Property<string>("TableId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TimersRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VPID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Vps")
                        .HasColumnType("datetime2")
                        .HasColumnName("VPS");

                    b.ToTable("FakeEpgs");
                });

            modelBuilder.Entity("DataLayer.Models.FakeEpgGuide", b =>
                {
                    b.Property<int>("BlockCounter")
                        .HasColumnType("int");

                    b.Property<bool?>("ChannelImage_1")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChannelImage_2")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChannelImage_3")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChannelImage_4")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChannelImage_5")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChannelImage_6")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChannelImage_7")
                        .HasColumnType("bit");

                    b.Property<string>("ChannelName_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName_7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ChannelRecId_1")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChannelRecId_2")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChannelRecId_3")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChannelRecId_4")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChannelRecId_5")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChannelRecId_6")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChannelRecId_7")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CurrentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EpgDescription_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgDescription_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgDescription_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgDescription_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgDescription_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgDescription_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgDescription_7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EpgDuration_1")
                        .HasColumnType("int");

                    b.Property<int?>("EpgDuration_2")
                        .HasColumnType("int");

                    b.Property<int?>("EpgDuration_3")
                        .HasColumnType("int");

                    b.Property<int?>("EpgDuration_4")
                        .HasColumnType("int");

                    b.Property<int?>("EpgDuration_5")
                        .HasColumnType("int");

                    b.Property<int?>("EpgDuration_6")
                        .HasColumnType("int");

                    b.Property<int?>("EpgDuration_7")
                        .HasColumnType("int");

                    b.Property<int?>("EpgEventId_1")
                        .HasColumnType("int");

                    b.Property<int?>("EpgEventId_2")
                        .HasColumnType("int");

                    b.Property<int?>("EpgEventId_3")
                        .HasColumnType("int");

                    b.Property<int?>("EpgEventId_4")
                        .HasColumnType("int");

                    b.Property<int?>("EpgEventId_5")
                        .HasColumnType("int");

                    b.Property<int?>("EpgEventId_6")
                        .HasColumnType("int");

                    b.Property<int?>("EpgEventId_7")
                        .HasColumnType("int");

                    b.Property<long?>("EpgRecId_1")
                        .HasColumnType("bigint");

                    b.Property<long?>("EpgRecId_2")
                        .HasColumnType("bigint");

                    b.Property<long?>("EpgRecId_3")
                        .HasColumnType("bigint");

                    b.Property<long?>("EpgRecId_4")
                        .HasColumnType("bigint");

                    b.Property<long?>("EpgRecId_5")
                        .HasColumnType("bigint");

                    b.Property<long?>("EpgRecId_6")
                        .HasColumnType("bigint");

                    b.Property<long?>("EpgRecId_7")
                        .HasColumnType("bigint");

                    b.Property<string>("EpgShortDescription_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgShortDescription_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgShortDescription_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgShortDescription_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgShortDescription_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgShortDescription_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgShortDescription_7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EpgStartTime_1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EpgStartTime_2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EpgStartTime_3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EpgStartTime_4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EpgStartTime_5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EpgStartTime_6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EpgStartTime_7")
                        .HasColumnType("datetime2");

                    b.Property<string>("EpgTitle_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgTitle_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgTitle_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgTitle_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgTitle_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgTitle_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpgTitle_7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowCounter")
                        .HasColumnType("int");

                    b.ToTable("FakeEpgGuide");
                });

            modelBuilder.Entity("DataLayer.Models.FakeTimer", b =>
                {
                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ChannelRecId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modtime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("FakeTimers");
                });

            modelBuilder.Entity("DataLayer.Models.FindEntry", b =>
                {
                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ChannelRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("GenreCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentalRating")
                        .HasColumnType("int");

                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SymbolIndex")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Vps")
                        .HasColumnType("datetime2")
                        .HasColumnName("VPS");

                    b.ToTable("FoundEntries");
                });

            modelBuilder.Entity("DataLayer.Models.Recording", b =>
                {
                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<string>("RecordingPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RecordingTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RecId");

                    b.ToTable("Recordings");
                });

            modelBuilder.Entity("DataLayer.Models.Station", b =>
                {
                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableWol")
                        .HasColumnType("bit")
                        .HasColumnName("EnableWOL");

                    b.Property<string>("HostAddress")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PathToRecordings")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SambaPassword")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("SambaUserName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Sshpassword")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("SSHPassword");

                    b.Property<int?>("Sshport")
                        .HasColumnType("int")
                        .HasColumnName("SSHPort");

                    b.Property<string>("SshuserName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SSHUserName");

                    b.Property<int>("StationType")
                        .HasColumnType("int");

                    b.Property<int?>("Svdrpport")
                        .HasColumnType("int")
                        .HasColumnName("SVDRPPort");

                    b.Property<int?>("VdrControlServicePort")
                        .HasColumnType("int");

                    b.Property<string>("VdradminPassword")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("VDRAdminPassword");

                    b.Property<int?>("VdradminPort")
                        .HasColumnType("int")
                        .HasColumnName("VDRAdminPort");

                    b.Property<string>("VdradminUserName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("VDRAdminUserName");

                    b.HasKey("RecId");

                    b.HasIndex("HostAddress")
                        .IsUnique()
                        .HasDatabaseName("IX_Stations");

                    b.HasIndex("StationType")
                        .HasDatabaseName("NCI_StationType");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("DataLayer.Models.StatusInfo", b =>
                {
                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<int?>("FreeDiskSpace")
                        .HasColumnType("int");

                    b.Property<long>("SystemSettingsRecId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TotalDiskSpace")
                        .HasColumnType("int");

                    b.Property<decimal?>("UsedPercent")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("RecId");

                    b.HasIndex("SystemSettingsRecId");

                    b.ToTable("StatusInfo");
                });

            modelBuilder.Entity("DataLayer.Models.SystemSetting", b =>
                {
                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<short?>("ChannelListType")
                        .HasColumnType("smallint");

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableLogging")
                        .HasColumnType("bit");

                    b.Property<bool?>("FavouritesOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateChannels")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdateEpg")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdateEPG");

                    b.Property<DateTime?>("LastUpdateRecordings")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdateStatus")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdateTimers")
                        .HasColumnType("datetime");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("OverwriteUPnPDownload")
                        .HasColumnType("bit");

                    b.Property<string>("PathToChannelLogos")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("SaveBufferToFile")
                        .HasColumnType("bit");

                    b.Property<int?>("TcAudioBitRate")
                        .HasColumnType("int");

                    b.Property<int?>("TcAudioChannel")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TcMaxVideoDuration")
                        .HasColumnType("time");

                    b.Property<string>("TcPixelFormat")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("TcRemoveAudio")
                        .HasColumnType("bit");

                    b.Property<string>("TcTarget")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TcThreads")
                        .HasColumnType("int");

                    b.Property<int>("TcVideoAspectRatio")
                        .HasColumnType("int");

                    b.Property<int?>("TcVideoBitRate")
                        .HasColumnType("int");

                    b.Property<int>("TcVideoCodec")
                        .HasColumnType("int");

                    b.Property<int>("TcVideoFormat")
                        .HasColumnType("int");

                    b.Property<int?>("TcVideoFps")
                        .HasColumnType("int");

                    b.Property<int?>("TcVideoSize")
                        .HasColumnType("int");

                    b.Property<double?>("TcVideoTimeScale")
                        .HasColumnType("float");

                    b.Property<string>("UPnPDownloadPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RecId");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("DataLayer.Models.Timer", b =>
                {
                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecId"), 1L, 1);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("ChannelRecId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modtime")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RecId");

                    b.HasIndex("ChannelRecId")
                        .HasDatabaseName("NCI_ChannelRecId");

                    b.HasIndex("Title", "StartTime", "EndTime")
                        .HasDatabaseName("NCI_Title_StartTime_EndTime");

                    b.ToTable("Timers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Xml")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("DataLayer.Models.Epg", b =>
                {
                    b.HasOne("DataLayer.Models.Channel", "ChannelRec")
                        .WithMany("Epg")
                        .HasForeignKey("ChannelRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_EPG_Channels");

                    b.Navigation("ChannelRec");
                });

            modelBuilder.Entity("DataLayer.Models.StatusInfo", b =>
                {
                    b.HasOne("DataLayer.Models.SystemSetting", "SystemSettingsRec")
                        .WithMany("StatusInfo")
                        .HasForeignKey("SystemSettingsRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StatusInfo_SystemSettingsRecId");

                    b.Navigation("SystemSettingsRec");
                });

            modelBuilder.Entity("DataLayer.Models.Timer", b =>
                {
                    b.HasOne("DataLayer.Models.Channel", "ChannelRec")
                        .WithMany("Timers")
                        .HasForeignKey("ChannelRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Timers_Channels");

                    b.Navigation("ChannelRec");
                });

            modelBuilder.Entity("DataLayer.Models.Channel", b =>
                {
                    b.Navigation("Epg");

                    b.Navigation("Timers");
                });

            modelBuilder.Entity("DataLayer.Models.SystemSetting", b =>
                {
                    b.Navigation("StatusInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
